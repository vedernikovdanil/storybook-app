(self.webpackChunkstorybook_app=self.webpackChunkstorybook_app||[]).push([[954],{"./src/components/organisms/Navbar/Darkmode/index.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const THEME_STORAGE_KEY="darkmode",getThemeName=isDarkmode=>isDarkmode?"bg-dark":"bg-light";function Darkmode({onChange:onChangeProp,...props}){const[isDarkmode,setIsDarkmode]=react__WEBPACK_IMPORTED_MODULE_0__.useState((()=>"true"===localStorage.getItem(THEME_STORAGE_KEY)));react__WEBPACK_IMPORTED_MODULE_0__.useEffect((()=>(document.documentElement.classList.add(getThemeName(isDarkmode)),localStorage.setItem(THEME_STORAGE_KEY,isDarkmode.toString()),onChangeProp?.call({},isDarkmode),()=>{document.documentElement.classList.remove(getThemeName(isDarkmode))})),[isDarkmode]);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("button",{className:"navbar-darkmode","aria-label":"Darkmode toggler",onClick:()=>{setIsDarkmode((value=>!value))},...props})}Darkmode.displayName="Darkmode",__webpack_exports__.Z=Darkmode;try{Darkmode.displayName="Darkmode",Darkmode.__docgenInfo={description:"",displayName:"Darkmode",props:{onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"((isDarkmode: boolean) => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/organisms/Navbar/Darkmode/index.tsx#Darkmode"]={docgenInfo:Darkmode.__docgenInfo,name:"Darkmode",path:"src/components/organisms/Navbar/Darkmode/index.tsx#Darkmode"})}catch(__react_docgen_typescript_loader_error){}},"./src/utils/sleep.ts":function(__unused_webpack_module,__webpack_exports__){"use strict";__webpack_exports__.Z=async function sleep(timeout){return await new Promise((resolve=>setTimeout(resolve,timeout)))}},"./src/components/organisms/Navbar/Darkmode/Darkmode.stories.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:function(){return Default},__namedExportsOrder:function(){return __namedExportsOrder},default:function(){return Darkmode_stories}});__webpack_require__("./node_modules/react/index.js");var Darkmode=__webpack_require__("./src/components/organisms/Navbar/Darkmode/index.tsx"),esm=__webpack_require__("./node_modules/@storybook/testing-library/dist/esm/index.js"),dist_esm=__webpack_require__("./node_modules/@storybook/jest/dist/esm/index.js"),sleep=__webpack_require__("./src/utils/sleep.ts");var Darkmode_test=async({canvasElement:canvasElement,step:step})=>{const darkmode=(0,esm.uh)(canvasElement).getByRole("button");await step("Should be change theme to dark on click",(async()=>{await(0,sleep.Z)(1e3);const beforeStyle={...getComputedStyle(document.documentElement)};esm.mV.click(darkmode),await(0,sleep.Z)(1e3);const afterStyle={...getComputedStyle(document.documentElement)},beforeBgColor=beforeStyle.backgroundColor,afterBgColor=afterStyle.backgroundColor;(0,dist_esm.l)(beforeBgColor).not.toBe(afterBgColor)}))},jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");var Darkmode_stories={component:Darkmode.Z};const Default={render:args=>(0,jsx_runtime.jsx)(Darkmode.Z,{...args}),play:Darkmode_test},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => /*#__PURE__*/_jsx(Darkmode, {\n    ...args\n  }),\n  play: PlayDarkmode\n}",...Default.parameters?.docs?.source}}}},"?4f7e":function(){}}]);